//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consumer.EmployeeServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeServiceException", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class EmployeeServiceException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FaultIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FaultId {
            get {
                return this.FaultIdField;
            }
            set {
                if ((this.FaultIdField.Equals(value) != true)) {
                    this.FaultIdField = value;
                    this.RaisePropertyChanged("FaultId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IAddEmployeeService")]
    public interface IAddEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddEmployeeService/AddRemarks", ReplyAction="http://tempuri.org/IAddEmployeeService/AddRemarksResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Consumer.EmployeeServiceReference.EmployeeServiceException), Action="http://tempuri.org/IAddEmployeeService/AddRemarksEmployeeServiceExceptionFault", Name="EmployeeServiceException", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
        void AddRemarks(int employeeId, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddEmployeeService/AddRemarks", ReplyAction="http://tempuri.org/IAddEmployeeService/AddRemarksResponse")]
        System.Threading.Tasks.Task AddRemarksAsync(int employeeId, string remark);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/IAddEmployeeService/CreateEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Consumer.EmployeeServiceReference.EmployeeServiceException), Action="http://tempuri.org/IAddEmployeeService/CreateEmployeeEmployeeServiceExceptionFaul" +
            "t", Name="EmployeeServiceException", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
        void CreateEmployee(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddEmployeeService/CreateEmployee", ReplyAction="http://tempuri.org/IAddEmployeeService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task CreateEmployeeAsync(int id, string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddEmployeeServiceChannel : Consumer.EmployeeServiceReference.IAddEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddEmployeeServiceClient : System.ServiceModel.ClientBase<Consumer.EmployeeServiceReference.IAddEmployeeService>, Consumer.EmployeeServiceReference.IAddEmployeeService {
        
        public AddEmployeeServiceClient() {
        }
        
        public AddEmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddEmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddEmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddEmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddRemarks(int employeeId, string remark) {
            base.Channel.AddRemarks(employeeId, remark);
        }
        
        public System.Threading.Tasks.Task AddRemarksAsync(int employeeId, string remark) {
            return base.Channel.AddRemarksAsync(employeeId, remark);
        }
        
        public void CreateEmployee(int id, string name) {
            base.Channel.CreateEmployee(id, name);
        }
        
        public System.Threading.Tasks.Task CreateEmployeeAsync(int id, string name) {
            return base.Channel.CreateEmployeeAsync(id, name);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceReference.IGetEmployeeService")]
    public interface IGetEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsById", ReplyAction="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Consumer.EmployeeServiceReference.EmployeeServiceException), Action="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByIdEmployeeServiceExcep" +
            "tionFault", Name="EmployeeServiceException", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
        Consumer.EmployeeServiceReference.Employee GetEmployeeDetailsById(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsById", ReplyAction="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByIdResponse")]
        System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee> GetEmployeeDetailsByIdAsync(int employeeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByName", ReplyAction="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Consumer.EmployeeServiceReference.EmployeeServiceException), Action="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByNameEmployeeServiceExc" +
            "eptionFault", Name="EmployeeServiceException", Namespace="http://schemas.datacontract.org/2004/07/EmployeeService")]
        Consumer.EmployeeServiceReference.Employee GetEmployeeDetailsByName(string employeeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByName", ReplyAction="http://tempuri.org/IGetEmployeeService/GetEmployeeDetailsByNameResponse")]
        System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee> GetEmployeeDetailsByNameAsync(string employeeName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetAllEmployees", ReplyAction="http://tempuri.org/IGetEmployeeService/GetAllEmployeesResponse")]
        Consumer.EmployeeServiceReference.Employee[] GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetAllEmployees", ReplyAction="http://tempuri.org/IGetEmployeeService/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee[]> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetEmployeesWithRemarks", ReplyAction="http://tempuri.org/IGetEmployeeService/GetEmployeesWithRemarksResponse")]
        Consumer.EmployeeServiceReference.Employee[] GetEmployeesWithRemarks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGetEmployeeService/GetEmployeesWithRemarks", ReplyAction="http://tempuri.org/IGetEmployeeService/GetEmployeesWithRemarksResponse")]
        System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee[]> GetEmployeesWithRemarksAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetEmployeeServiceChannel : Consumer.EmployeeServiceReference.IGetEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeeServiceClient : System.ServiceModel.ClientBase<Consumer.EmployeeServiceReference.IGetEmployeeService>, Consumer.EmployeeServiceReference.IGetEmployeeService {
        
        public GetEmployeeServiceClient() {
        }
        
        public GetEmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetEmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetEmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetEmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Consumer.EmployeeServiceReference.Employee GetEmployeeDetailsById(int employeeId) {
            return base.Channel.GetEmployeeDetailsById(employeeId);
        }
        
        public System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee> GetEmployeeDetailsByIdAsync(int employeeId) {
            return base.Channel.GetEmployeeDetailsByIdAsync(employeeId);
        }
        
        public Consumer.EmployeeServiceReference.Employee GetEmployeeDetailsByName(string employeeName) {
            return base.Channel.GetEmployeeDetailsByName(employeeName);
        }
        
        public System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee> GetEmployeeDetailsByNameAsync(string employeeName) {
            return base.Channel.GetEmployeeDetailsByNameAsync(employeeName);
        }
        
        public Consumer.EmployeeServiceReference.Employee[] GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee[]> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public Consumer.EmployeeServiceReference.Employee[] GetEmployeesWithRemarks() {
            return base.Channel.GetEmployeesWithRemarks();
        }
        
        public System.Threading.Tasks.Task<Consumer.EmployeeServiceReference.Employee[]> GetEmployeesWithRemarksAsync() {
            return base.Channel.GetEmployeesWithRemarksAsync();
        }
    }
}
